const byte mask[] PROGMEM = {
  64, 64,
  0x00,0x02,0x00,0x10,0x00,0x80,0x00,0x00,0x00,0x03,0x00,0x10,0x01,0x80,0x00,0x00,0x30,0x03,0x80,0x38,0x03,0x80,0x18,0x00,0x3C,0x03,0xC0,0x38,0x07,0x80,0x78,0x00,
  0x1F,0x03,0xE0,0x7C,0x0F,0x81,0xF0,0x00,0x1F,0x03,0xE0,0x7C,0x0F,0x81,0xF0,0x00,0x0F,0x01,0xC0,0x38,0x07,0x01,0xE0,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,
  0x00,0xC0,0x70,0x38,0x1C,0x06,0x00,0x00,0x00,0xE0,0x70,0x38,0x1C,0x0E,0x00,0x00,0x00,0x60,0x30,0x10,0x18,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x20,0x80,0x00,0x00,0x7E,0x00,0x7E,0x00,0x71,0xC0,0x00,0x00,0xFC,0x00,
  0x3E,0x00,0x71,0xC0,0x00,0x00,0xF8,0x00,0x1E,0xC0,0x20,0x80,0x00,0x06,0xF0,0x00,0x0C,0xE0,0x51,0x40,0x00,0x0E,0x60,0x00,0x00,0xE0,0x00,0x00,0x00,0x0E,0x00,0x00,
  0x00,0x00,0x21,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x73,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x01,0x00,0x00,0x60,0x00,0x3E,0xC0,0x22,0x13,0x80,0x06,0xF8,0x00,0xFE,0xE0,0x77,0x3B,0xC0,0x0E,0xFE,0x00,
  0x3E,0xC0,0x72,0x3B,0x80,0x06,0xF8,0x00,0x0C,0x00,0x20,0x11,0x00,0x00,0x60,0x00,0x00,0x00,0x50,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x20,0x82,0x08,0x0E,0x00,0x00,
  0x0C,0xE0,0x71,0xC7,0x1C,0x0E,0x60,0x00,0x1E,0xC0,0x71,0xC7,0x1C,0x06,0xF0,0x00,0x3E,0x00,0x00,0x82,0x08,0x00,0xF8,0x00,0x7E,0x00,0x00,0x02,0x14,0x00,0xFC,0x00,
  0xFC,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x60,0x30,0x10,0x18,0x0C,0x00,0x00,0x00,0xE0,0x70,0x38,0x1C,0x0E,0x00,0x00,0x00,0xC0,0x70,0x38,0x1C,0x06,0x00,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,
  0x0F,0x01,0xC0,0x38,0x07,0x01,0xE0,0x00,0x1F,0x03,0xE0,0x7C,0x0F,0x81,0xF0,0x00,0x1F,0x03,0xE0,0x7C,0x0F,0x81,0xF0,0x00,0x3C,0x03,0xC0,0x38,0x07,0x80,0x78,0x00,
  0x30,0x03,0x80,0x38,0x03,0x80,0x18,0x00,0x00,0x03,0x00,0x10,0x01,0x80,0x00,0x00,0x00,0x02,0x00,0x10,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};


const byte image1[] PROGMEM = {
  64, 64,
  0x00,0x02,0x00,0x10,0x00,0x80,0x00,0x00,0x00,0x03,0x00,0x10,0x01,0x80,0x00,0x00,0x30,0x03,0x80,0x38,0x03,0x80,0x18,0x00,0x3C,0x03,0xC0,0x38,0x07,0x80,0x78,0x00,
  0x1F,0x03,0xE0,0x7C,0x0F,0x81,0xF0,0x00,0x1F,0x03,0x60,0x6C,0x0D,0x81,0xF0,0x00,0x0D,0x01,0xC0,0x38,0x07,0x01,0x60,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,
  0x00,0xC0,0x70,0x38,0x1C,0x06,0x00,0x00,0x00,0xA0,0x50,0x28,0x14,0x0A,0x00,0x00,0x00,0x60,0x30,0x10,0x18,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x20,0x80,0x00,0x00,0x7E,0x00,0x7E,0x00,0x51,0x40,0x00,0x00,0xFC,0x00,
  0x3A,0x00,0x71,0xC0,0x00,0x00,0xB8,0x00,0x1E,0xC0,0x20,0x80,0x00,0x06,0xF0,0x00,0x0C,0xA0,0x51,0x40,0x00,0x0A,0x60,0x00,0x00,0xE0,0x00,0x00,0x00,0x0E,0x00,0x00,
  0x00,0x00,0x21,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x73,0x60,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x01,0x00,0x00,0x60,0x00,0x3E,0xC0,0x22,0x13,0x80,0x06,0xF8,0x00,0xFA,0xA0,0x57,0x2A,0xC0,0x0A,0xBE,0x00,
  0x3E,0xC0,0x72,0x3B,0x80,0x06,0xF8,0x00,0x0C,0x00,0x20,0x11,0x00,0x00,0x60,0x00,0x00,0x00,0x50,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x20,0x82,0x08,0x0E,0x00,0x00,
  0x0C,0xA0,0x51,0x45,0x14,0x0A,0x60,0x00,0x1E,0xC0,0x71,0xC7,0x1C,0x06,0xF0,0x00,0x3A,0x00,0x00,0x82,0x08,0x00,0xB8,0x00,0x7E,0x00,0x00,0x02,0x14,0x00,0xFC,0x00,
  0xFC,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x60,0x30,0x10,0x18,0x0C,0x00,0x00,0x00,0xA0,0x50,0x28,0x14,0x0A,0x00,0x00,0x00,0xC0,0x70,0x38,0x1C,0x06,0x00,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,
  0x0D,0x01,0xC0,0x38,0x07,0x01,0x60,0x00,0x1F,0x03,0x60,0x6C,0x0D,0x81,0xF0,0x00,0x1F,0x03,0xE0,0x7C,0x0F,0x81,0xF0,0x00,0x3C,0x03,0xC0,0x38,0x07,0x80,0x78,0x00,
  0x30,0x03,0x80,0x38,0x03,0x80,0x18,0x00,0x00,0x03,0x00,0x10,0x01,0x80,0x00,0x00,0x00,0x02,0x00,0x10,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};


const byte image2[] PROGMEM = {
  64, 64,
  0x00,0x02,0x00,0x10,0x00,0x80,0x00,0x00,0x00,0x03,0x00,0x10,0x01,0x80,0x00,0x00,0x30,0x02,0x80,0x28,0x02,0x80,0x18,0x00,0x2C,0x02,0x40,0x28,0x04,0x80,0x68,0x00,
  0x13,0x02,0x20,0x44,0x08,0x81,0x90,0x00,0x11,0x02,0x20,0x44,0x08,0x81,0x10,0x00,0x09,0x01,0xC0,0x38,0x07,0x01,0x20,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,
  0x00,0xC0,0x70,0x38,0x1C,0x06,0x00,0x00,0x00,0xA0,0x50,0x28,0x14,0x0A,0x00,0x00,0x00,0x60,0x30,0x10,0x18,0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x20,0x80,0x00,0x00,0x7E,0x00,0x42,0x00,0x51,0x40,0x00,0x00,0x84,0x00,
  0x22,0x00,0x71,0xC0,0x00,0x00,0x88,0x00,0x12,0xC0,0x20,0x80,0x00,0x06,0x90,0x00,0x0C,0xA0,0x51,0x40,0x00,0x0A,0x60,0x00,0x00,0xE0,0x00,0x00,0x00,0x0E,0x00,0x00,
  0x00,0x00,0x21,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x52,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x21,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0C,0x00,0x00,0x01,0x00,0x00,0x60,0x00,0x32,0xC0,0x22,0x12,0x80,0x06,0x98,0x00,0xC2,0xA0,0x55,0x2A,0x40,0x0A,0x86,0x00,
  0x32,0xC0,0x72,0x3A,0x80,0x06,0x98,0x00,0x0C,0x00,0x20,0x11,0x00,0x00,0x60,0x00,0x00,0x00,0x50,0x28,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xE0,0x20,0x82,0x08,0x0E,0x00,0x00,
  0x0C,0xA0,0x51,0x45,0x14,0x0A,0x60,0x00,0x12,0xC0,0x71,0xC7,0x1C,0x06,0x90,0x00,0x22,0x00,0x00,0x82,0x08,0x00,0x88,0x00,0x42,0x00,0x00,0x02,0x14,0x00,0x84,0x00,
  0xFC,0x00,0x00,0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x60,0x30,0x10,0x18,0x0C,0x00,0x00,0x00,0xA0,0x50,0x28,0x14,0x0A,0x00,0x00,0x00,0xC0,0x70,0x38,0x1C,0x06,0x00,0x00,0x0E,0x00,0x00,0x00,0x00,0x00,0xE0,0x00,
  0x09,0x01,0xC0,0x38,0x07,0x01,0x20,0x00,0x11,0x02,0x20,0x44,0x08,0x81,0x10,0x00,0x13,0x02,0x20,0x44,0x08,0x81,0x90,0x00,0x2C,0x02,0x40,0x28,0x04,0x80,0x68,0x00,
  0x30,0x02,0x80,0x28,0x02,0x80,0x18,0x00,0x00,0x03,0x00,0x10,0x01,0x80,0x00,0x00,0x00,0x02,0x00,0x10,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};

struct ship_sprite_data
{
  char capsule_x, capsule_y, flame_x, flame_y, flame_w, flame_h;
};

#define NUM_ANGLES 16

// first array is without flame, second is with
ship_sprite_data angles[] PROGMEM =
{
  {27,45,   25,44, 5,11},
  {18,45,   14,44, 6,11},
  { 9,45,    2,44, 9, 9},
  { 9,36,    0,35,11, 6},
  { 9,27,    0,25,11, 5},
  { 9,18,    0,14,11, 6},
  { 9, 9,    2, 2, 9, 9},  
  {18, 9,   14, 0, 6,11},
  {27, 9,   25,  0,5,11},
  {36, 9,    35,0, 6,11},
  {45, 9,   44, 2, 9, 9},
  {45,18,   44,14,11, 6},
  {45,27,   44,25,11, 5},
  {45,36,   44,35,11, 6},  
  {45,45,   44,44, 9, 9},
  {36,45,   35,44, 6,11},
};

void update_ship(boolean & render_down_flame, boolean & render_left_flame, boolean & render_right_flame)
{
  /*
  // apply thrusters
  if ((fuel > 0) && (gb.buttons.repeat(BTN_DOWN, 1) || gb.buttons.repeat(BTN_A, 1)))
    ship_vel += down_thrust, fuel -= down_rate, render_down_flame = true;
  if ((fuel > 0) && gb.buttons.repeat(BTN_LEFT, 1))
    ship_vel -= sideways_thrust, fuel -= sideways_rate, render_right_flame = true;
  if ((fuel > 0) && gb.buttons.repeat(BTN_RIGHT, 1))
    ship_vel += sideways_thrust, fuel -= sideways_rate, render_left_flame = true;
    */
    
  // downward thruster
  if ((fuel > 0) && (gb.buttons.repeat(BTN_DOWN, 1) || gb.buttons.repeat(BTN_A, 1)))
  {
    ship_vel.x += THRUST * sin(ship_angle);
    ship_vel.y -= THRUST * cos(ship_angle);
    render_down_flame = true;
  }
      
   // rotation
   if (gb.buttons.repeat(BTN_LEFT, 1))
   {
     ship_angle -= ROTATION_SPEED;
     while (ship_angle < 0)
       ship_angle += 2*PI;
   }
   if (gb.buttons.repeat(BTN_RIGHT, 1))
   {
     ship_angle += ROTATION_SPEED;
     while (ship_angle >= 2*PI)
       ship_angle -= 2*PI;
   }
    
   if (fuel < 0)
    fuel = 0;

  // apply gravity
  ship_vel.y += GRAVITY;
  
  // update the ship's position
  ship_pos += ship_vel;
  
  // clamp to landscape boundry
  if (ship_pos.x < 0)
  {
    ship_pos.x = -ship_pos.x;
    ship_vel.x = -ship_vel.x;
  }
  if (ship_pos.x >= NUM_COLUMNS*LCDWIDTH)
  {
    ship_pos.x = 2*NUM_COLUMNS*LCDWIDTH - ship_pos.x;
    ship_vel.x = -ship_vel.x;
  }
  if (ship_pos.y >= NUM_ROWS*LCDHEIGHT)
  {
    ship_pos.y = 2*NUM_ROWS*LCDHEIGHT - ship_pos.y;
    ship_vel.y = -ship_vel.y;
  }
  
  fuel = 1000;
}

void draw_ship(boolean render_down_flame, boolean render_left_flame, boolean render_right_flame, boolean grayscale_frame) {
  
  float ship_x = ship_pos.x;
  float ship_y = ship_pos.y;
  while (ship_y < 0)
    ship_y += LCDHEIGHT;

  //char center_x, center_y, no_flame_x, no_flame_y, no_flame_w, no_flame_h, flame_x, flame_y, flame_w, flame_h;
  int angle = (int)(NUM_ANGLES * ship_angle / (2*PI) + 0.5f) % NUM_ANGLES;
  ship_sprite_data * data = &angles[angle];
  int8_t capsule_x = pgm_read_byte(&data->capsule_x);
  int8_t capsule_y = pgm_read_byte(&data->capsule_y);
  int8_t src_x, src_y, dst_w, dst_h;
  if (!render_down_flame)
  {
    // hardcoded values...bad!
    src_x = capsule_x-1;
    src_y = capsule_y-1;
    dst_w = 3;
    dst_h = 3;
  }
  else
  {
    src_x = pgm_read_byte(&data->flame_x);
    src_y = pgm_read_byte(&data->flame_y);
    dst_w = pgm_read_byte(&data->flame_w);
    dst_h = pgm_read_byte(&data->flame_h);    
  }
  int8_t dst_x = (int8_t)((int)ship_x % LCDWIDTH + src_x - capsule_x);
  int8_t dst_y = (int8_t)((int)ship_y % LCDHEIGHT + src_y - capsule_y);
  
  gb.display.setColor(WHITE);
  drawBitmap(dst_x, dst_y, dst_w, dst_h, src_x, src_y, mask);
  gb.display.setColor(BLACK);
  if (grayscale_frame)
    drawBitmap(dst_x, dst_y, dst_w, dst_h, src_x, src_y, image1);
  else
    drawBitmap(dst_x, dst_y, dst_w, dst_h, src_x, src_y, image2);
}

void draw_fuel() {
  gb.display.cursorX = 0;
  gb.display.cursorY = 0;
  gb.display.print("FUEL:");
  gb.display.println((int)fuel);
}


